<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Charmed.Sample.Views.FeedItemPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="using:Charmed.Sample.Win8.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:helpers="using:Charmed.Helpers"
	xmlns:converters="using:Charmed.Converters"
    mc:Ignorable="d"
	DataContext="{Binding Source={StaticResource Locator}, Path=FeedItem}">

    <Page.Resources>
		<converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
		<converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" />
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
			<TextBlock x:Name="pageTitle" Grid.Column="1" Text="{Binding FeedItem.Title}" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
		
		<Grid Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>
			<TextBlock Text="{Binding FeedItem.Author}" Style="{StaticResource SubheaderTextStyle}" />
			<WebView
				helpers:WebViewHelper.HtmlContent="{Binding FeedItem.Content}"
				IsRightTapEnabled="False"
				Margin="0,0,0,110"
				Grid.Row="1" />
		</Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
	<Page.BottomAppBar>
		<AppBar Padding="10,0,10,0">
			<Grid>
				<Button
					Style="{StaticResource PinAppBarButtonStyle}"
					AutomationProperties.Name="Pin to Start"
					Visibility="{Binding IsFeedItemPinned, Converter={StaticResource InverseBoolToVisibilityConverter}}"
					helpers:ButtonHelper.MethodName="Pin"
					helpers:ButtonHelper.Parameter="{Binding FeedItem}"/>

				<Button
					Style="{StaticResource UnPinAppBarButtonStyle}"
					AutomationProperties.Name="Unpin from Start"
					Visibility="{Binding IsFeedItemPinned, Converter={StaticResource BoolToVisibilityConverter}}"
					helpers:ButtonHelper.MethodName="Unpin"/>
			</Grid>
		</AppBar>
	</Page.BottomAppBar>
</common:LayoutAwarePage>
